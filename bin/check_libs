#! /usr/bin/perl

# check dynamic lib dependecies

while($ARGV[0] eq '-v') {
  shift;
  $verbose++;
}

while($dir = shift) {
  die "usage: check_libs dir\n" unless -d $dir;

  $error = 0;

  undef @type_f;
  undef @i;
  undef @ELF;

  print "finding ELF objects...\n";

  for $f (`cd $dir ; find . -type f`) {
    chomp $f;
    next if $f =~ /modules/;              # skip modules
    push @type_f, $f;
  }

  @type_f = map(quotemeta, @type_f);

  for($i = 0; $i < @type_f; $i += 100) {
    push @i, `cd $dir ; file @type_f[$i .. $i + 99]`;
  }

  for (@i) {
    if(/(.*):.*?\s+ELF\s.*\s(shared\s+object|executable)/) {
      push @ELF, $1;
    }
  }

  # extract build ids
  open(DLOG, ">$dir.debugids");
  for my $f (@ELF) {
    for (`readelf -n '$dir/$f'`) {
      if (m/\sBuild ID:\s*([0-9a-z]*)/) {
	print "Build-ID: $1 $f\n" if ($verbose >= 1);
	print DLOG "$1 $f\n";
      }
    }
  }
  close(DLOG);

  print "extracting shared object dependencies...\n";

  @ELF = map(quotemeta, @ELF);

  for (`cd $dir ; objdump -p @ELF`)
  {
    if (m-(.*):\s+file format-) {
      $f = $1;
      $f0 = $f;
      $f0 =~ s/^\.\///;
      ($fn = $f0) =~ s#.*/##;
      print "$f0\n" if $verbose >= 2;
      $soname2{$fn} = $f0 if $fn ne "";
    }
    push @{$needed{$1}}, $f0 if /^\s+NEEDED\s+(\S+)\s*$/;
    $soname{$1} = $f0 if /^\s+SONAME\s+(\S+)\s*$/;
  }

  if( -f "$dir/etc/ld.so.cache") {
    @l = `ldconfig -C $dir/etc/ld.so.cache -p`;
    shift @l;
    for (@l) {
      $ldconfig{$1} = $2 if /^\s+(\S+)\s*.*=>\s*(\S+)/;
    }
  }
}


print "checking ld.so.cache...\n";
if(%ldconfig) {
  $first = 1;
  for (keys %soname) {
    next if $soname{$_} =~ m#^usr/lib/YaST2/plugin#;
    next unless exists $needed{$_};

    if(!exists $ldconfig{$_}) {
      print "libs not in ld.so.cache:\n" if $first;
      printf "  %-24s  %s\n", $_, $soname{$_};
      printf "  [needed by: %s]\n", join(', ', @{$needed{$_}}) if $verbose >= 1;
      $first = 0;
#      $error = 1;
    }
  }
  print "ok\n" if $first;
}
else {
  print "no ld.so.cache found\n";
#  $error = 1;
}

print "checking for missing libs...\n";
$first = 1;
for (sort keys %needed) {
  if(!exists($soname{$_}) && !exists($soname2{$_}) && !exists($ldconfig{$_})) {
    printf "  %-24s  %s\n", $_, join(', ', @{$needed{$_}});
    $first = 0;
    $error = 1;
  }
}
print "ok\n" if $first;

print "checking for unused libs...\n";
$first = 1;
for (sort keys %soname) {
  if(!exists $needed{$_}) {
    if(
      $soname{$_} !~ m#^usr/lib(64)?/YaST2/plugin# &&
      $soname{$_} !~ m#^lib(64)?/libnss_# &&
      $soname{$_} !~ m#^lib(64)?/security/pam_# &&
      $soname{$_} !~ m#^usr/lib(64)?/suse-blinux# &&
      $soname{$_} !~ m#^usr/lib(64)?/alsa-lib#
    ) {
      printf "  %-24s  %s\n", $_, $soname{$_};
      $first = 0;
    }
  }
}
print "ok\n" if $first;

exit $error;


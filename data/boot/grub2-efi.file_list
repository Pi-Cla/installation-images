d /EFI/BOOT

if arch eq 'x86_64'
  grub_target = x86_64
  boot_efi = x64
elsif arch eq 'aarch64'
  grub_target = arm64
  boot_efi = aa64
elsif arch eq 'armv6l'
  grub_target = arm
  boot_efi = arm
elsif arch eq 'armv7l'
  grub_target = arm
  boot_efi = arm
endif

grub_efi = usr/share/grub2/<grub_target>-efi/grub.efi
shim_dir = usr/share/efi/<arch>

x grub-efi.cfg EFI/BOOT/grub.cfg
R s/\@arch\@/<arch>/g EFI/BOOT/grub.cfg

# kernel & initrd are in a different dir on x86_64
if arch eq 'x86_64'
  R s/(\/(linux|initrd))/\/loader$1/g EFI/BOOT/grub.cfg
endif

# keep everything between <foo>...</foo> when foo == arch and drop everything between <foo>...</foo> when foo != arch
#
# <foo> and </foo> must be alone on separate lines
#
R s/<\/?<arch>>\n// EFI/BOOT/grub.cfg
R s/<([a-z_0-9]+)>.*?<\/\1>\n//sg EFI/BOOT/grub.cfg

grub2-<grub_target>-efi:
  a <grub_efi> EFI/BOOT/boot<boot_efi>.efi

# use shim if available
if exists(shim)
  e mv EFI/BOOT/boot<boot_efi>.efi EFI/BOOT/grub.efi
  shim:
    a <shim_dir>/shim.efi EFI/BOOT/boot<boot_efi>.efi
    a <shim_dir>/MokManager.efi EFI/BOOT/
endif

# show product name in title instead of default grub string
d EFI/BOOT/locale
x grub2_head.po .
R s/product_name/<product_name>/ grub2_head.po
e msgfmt -o EFI/BOOT/locale/en.mo grub2_head.po
r grub2_head.po

# remove 'upgrade' boot entry
if BOOTMENU_NO_UPGRADE
  R s/\nmenuentry 'Upgrade'.*?\n\}\n//s EFI/BOOT/grub.cfg
endif

# grub2-efi with graphics
# this is just for patching grub.cfg
# real theme files are unpacked in theme.file_list
?grub2-branding-<grub2_theme>:
  R s/^with_gfx=0/with_gfx=1/ EFI/BOOT/grub.cfg
  R s/THEME/<grub2_theme>/g EFI/BOOT/grub.cfg

# add RPi packages if available
if arch eq 'aarch64' || arch eq 'armv7l' || arch eq 'armv6l'
  if exists(raspberrypi-firmware)
    raspberrypi-firmware:
      /
    raspberrypi-firmware-config:
      /
    raspberrypi-firmware-dt:
      /
    if exists(u-boot-rpiarm64)
      u-boot-rpiarm64:
        /
      arm-trusted-firmware-rpi4:
        /
    else
      u-boot-rpi3:
        /
  endif
  e mv boot/vc/* .
  r /boot /usr
  endif
endif
